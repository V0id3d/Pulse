//----------------------------------------------------------------------------------------------------------------------
//                                       ___   _____            ___      _
//                                      / _ \ |_  (_)___ _ _   | _ \_  _| |______
//                                     | (_) | / /| / _ \ ' \  |  _/ || | (_-< -_)
//                                     \__\_\/___|_\___/_||_| |_|  \_,_|_/__|___|
//                                                   [QZion Pulse]
//                                                   -Version 0.1-
//----------------------------------------------------------------------------------------------------------------------
//    Form styles to be used with QZion Pulse. These rules will keep all your forms looking as uniformed as possible
//    There are a lot of options that we want to make sure are shared throughout your project as to avoid as many
//    inconsistencies as possible.
//----------------------------------------------------------------------------------------------------------------------
//                                              Form Control ( .form-control )
//    This sets up the basic form controls for items such as text fields disabled states active states and so on. You
//    will find that most of this should be altered in your variables file and not directly here.
//----------------------------------------------------------------------------------------------------------------------
.form-control {
  background-clip: padding-box;
  background-color: $input-bg;
  background-image: none;
  border: $input-border-color solid $input-btn-border-width;
  color: $input-color;
  display: block;
  font-size: $font-size-base;
  line-height: $input-line-height;
  padding: $input-padding-y $input-padding-x;
  width: 100%;
  @if $enable-rounded {
    border-radius: $input-border-radius;
  } @else {
    border-radius: 0;
  }

  @include box-shadow($input-box-shadow);
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  @include form-control-focus();

  &::placeholder {
    color: $input-color-placeholder;
    opacity: 1;
  }

  &:disabled,
  &[readonly] {
    background-color: $input-bg-disabled;
    opacity: 1;
  }

  &:disabled {
    cursor: $cursor-disabled;
  }

  @include element('file') {
    display: block;
  }

  @include element('range') {
    display: block;
  }

  @include element('label') {
    margin-bottom: 0;
    padding-bottom: $input-padding-y;
    padding-top: $input-padding-y;

    @include modifier('lg') {
      font-size: $font-size-lg;
      padding-bottom: $input-padding-y-lg;
      padding-top: $input-padding-y-lg;
    }

    @include modifier('sm') {
      font-size: $font-size-sm;
      padding-bottom: $input-padding-y-sm;
      padding-top: $input-padding-y-sm;
    }
  }

  @include element('legend') {
    font-size: $font-size-base;
    margin-bottom: 0;
    padding-bottom: $input-padding-y;
    padding-top: $input-padding-y;
  }

  @include element('feedback') {
    margin-top: ($spacer * .25);
  }

  @include modifier('static') {
    border: solid transparent;
    border-width: 1px 0;
    line-height: $input-line-height;
    padding-bottom: $input-padding-y;
    padding-top: $input-padding-y;

    &.form-control--sm,
    &.form-control--lg {
      padding-left: 0;
      padding-right: 0;
    }
  }

  @include modifier('sm') {
    font-size: $font-size-sm;
    padding: $input-padding-y-sm $input-padding-x-sm;
    @include border-radius($input-border-radius-sm);
  }

  @include modifier('lg') {
    font-size: $font-size-lg;
    padding: $input-padding-y-lg $input-padding-x-lg;
    @include border-radius($input-border-radius-lg);
  }

  @include modifier('success') {
    padding-right: ($input-padding-x * 3);
    background-repeat: no-repeat;
    background-position: center right ($input-height / 4);
    background-size: ($input-height / 2)($input-height / 2);
  }

  @include modifier('warning') {
    padding-right: ($input-padding-x * 3);
    background-repeat: no-repeat;
    background-position: center right ($input-height / 4);
    background-size: ($input-height / 2)($input-height / 2);
  }

  @include modifier('danger') {
    padding-right: ($input-padding-x * 3);
    background-repeat: no-repeat;
    background-position: center right ($input-height / 4);
    background-size: ($input-height / 2)($input-height / 2);
  }

  select.form-control--sm {
    &:not([size]):not([multiple]) {
      height: $input-height-sm;
    }
  }

  select.form-control--lg {
    &:not([size]):not([multiple]) {
      height: $input-height-lg;
    }
  }

}

select.form-control {
  &:not([size]):not([multiple]) {
    $select-border-width: ($border-width * 2);
    height: calc(#{$input-height} - #{$select-border-width});
  }

  &:focus::-ms-value {
    background-color: $input-bg;
    color: $input-color;
  }
}

.has-success {
  //@include form-control-validation($brand-success);

  .form-control--success {
    background-image: $form-icon-success;
  }
}

.has-warning {
  //@include form-control-validation($brand-warning);

  .form-control--success {
    background-image: $form-icon-warning;
  }
}

.has-danger {
  //@include form-control-validation($brand-danger);

  .form-control--success {
    background-image: $form-icon-danger;
  }
}

//----------------------------------------------------------------------------------------------------------------------
//                                                  Forms ( .form )
//        We have set these up to be elements and modifies of a form for instance .form__group and .form--inline
//----------------------------------------------------------------------------------------------------------------------
.form {

  @include element('group') {
    margin-bottom: $form-group-margin-bottom;
  }

  @include element('text') {
    display: block;
    margin-top: ($spacer * .25);
    color: $text-muted;
    .form-control__label {
      padding-bottom: 0;
      margin-bottom: 0;
    }
  }

  @include element('check') {
    display: block;
    margin-bottom: ($spacer * .75);
    position: relative;

    + .form__check {
      margin-top: -.25rem;
    }

    @include element('label') {
      cursor: pointer;
      margin-bottom: 0;
      padding-left: 1.25rem;
    }
    @include element('input') {
      position: absolute;
      margin-top: .25rem;
      margin-left: -1.25rem;

      &:only-child {
        position: static;
      }
    }
    @include modifier('inline') {
      position: relative;
      display: inline-block;
      padding-left: 1.25rem;
      margin-bottom: 0;
      vertical-align: middle;
      cursor: pointer;

      + .form__check--inline {
        margin-left: .75rem;
      }

      &.disabled{
        color: $text-muted;
        cursor: $cursor-disabled;
      }
    }
  }

  @include modifier('inline') {
    @include media-breakpoint-up(sm){

      .form__group {
        display: inline-block;
        margin-bottom: 0;
        vertical-align: middle;
      }

      .form-control {
        display: inline-block;
        width: auto;
        vertical-align: middle;
      }

      .form-control--static {
        display: inline-block;
      }

      .input-group {
        display: inline-table;
        vertical-align: middle;
        width: auto;

        .input-group__addon,
        .input-group__btn,
        .form-control {
          width: auto;
        }
      }

      .input-group > .form-control {
        width: 100%;
      }

      .form-control__label {
        margin-bottom: 0;
        vertical-align: middle;
      }
      .form__check {
        display: inline-block;
        margin-bottom: 0;
        margin-top: 0;
        vertical-align: middle;
      }
      .form__check__label {
        padding-left: 0;
      }
      .form__check__input {
        margin-left: 0;
        position: relative;
      }
      .has-feedback .form-control__feedback {
        top: 0;
      }
    }
  }

}
